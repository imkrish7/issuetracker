extends layout

block content
  h1= title
  p Welcome to #{title}
  .main
      
      .issueform.form
            h1 Start Issue
            form(action="/api/issues/" method="post")
                        input(type="text", name="title" placeholder="Title" required)
                        textarea(name="text_issue", cols="30", rows="10" placeholder="Text" required)
                        input(type="text", name="created" placeholder="Created by" required)
                        input(type="text", name="assigned" placeholder="(opt)assigned to")
                        input(type="text", name="status" placeholder="(opt)Status Text")
                        button(type="submit") Submit

      .editissue.form
            h1 Edit Issue
            form#editForm( enctype ="multipart/form-data")
                        input(type="text", id="id" name="id" placeholder="id" required)
                        input(type="text", id="title" name="title" placeholder="Title")
                        textarea(name="issueText", id="issueText" cols="30", rows="10" placeholder="Text")
                        input(type="text", id="created" name="created" placeholder="Created by")
                        input(type="text", id="assigned" name="assigned" placeholder="(opt)assigned to")
                        input(type="text", id="status" name="status" placeholder="(opt)Status Text")
                        button#edit(type="submit" value="Submit!") Submit

      -var code = "<code> ["+"<br>"+" { "+"<br>"+'"_id":"5871dda29faedc3491ff93bb",'+"<br>"+'"issue_title":"Fix error in posting data",'+"<br>"+'"issue_text":"When we post data it has an error.",'+"<br>"+'"created_on":"2017-01-08T06:35:14.240Z",'+"<br>"+'"updated_on":"2017-01-08T06:35:14.240Z",'+"<br>"+'"created_by":"Joe","assigned_to":"Joe",'+"<br>"+'"open":true,'+'<br>'+'"status_text":"In QA"'+"<br>"+'},'+"<br>"+'...] '+"</code>"
      -var allissue = "<a href='/apitest/'>Example: Go To /apitest/project issues</a>"
      .deleteissue.form
            h1 Delete Issue
            form(id="delete")
                  input(type="text", name="id" id="delid"  placeholder="id" required)
                  button#del(type="submit") Submit

            h2 Exmple get Usage
            p /api/issues/{project}
            p /api/issues/{projectName}?open=true&assigned_to=Joe

            h2 Example return
            pre !{code}
            h2  !{allissue}


  .userstory
      h1 User Stories
      ol
        <li> Prevent cross site scripting(XSS attack).</li>
        <li> I can POST /api/issues/{projectname} with form data containing required issue_title, issue_text, created_by, and optional assigned_to and status_text.</li>
        <li> The object saved (and returned) will include all of those fields (blank for optional no input) and also include created_on(date/time), updated_on(date/time), open(boolean, true for open, false for closed), and _id.</li>
        <li> I can PUT /api/issues/{projectname} with a _id and any fields in the object with a value to object said object. Returned will be 'successfully updated' or 'could not update '+_id. This should always update updated_on. If no fields are sent return 'no updated field sent'.</li>
        <li> I can DELETE /api/issues/{projectname} with a _id to completely delete an issue. If no _id is sent return '_id error', success: 'deleted '+_id, failed: 'could not delete '+_id.</li>
        <li> I can GET /api/issues/{projectname} for an array of all issues on that specific project with all the information for each issue as was returned when posted.</li>
        <li> I can filter my get request by also passing along any field and value in the query(ie. /api/issues/{project}?open=false). I can pass along as many fields/values as I want.</li>
        <li> All 11 functional tests are complete and passing.</li>

  footer
      a(href="") Krishna Kamal                                    